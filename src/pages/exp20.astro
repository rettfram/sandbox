---
import MainLayout from '../layouts/MainLayout.astro'
---

<script>
import { scrollEvent } from '../scripts/lenis'
import { gsap } from '../scripts/gsap'
import * as THREE from 'three'
import { initThree } from '../scripts/init-three'

customElements.define('exp-20', class extends HTMLElement {
  constructor() { super() }

  async connectedCallback() {
    const webgl = this.querySelector('.webgl') as HTMLElement

    const { renderer, scene, camera, resize } = initThree(webgl)

    const geometry = new THREE.TorusGeometry(0.7, 0.2, 16, 100)
    const material = new THREE.MeshToonMaterial({ color: '#666' })
    const mesh = new THREE.Mesh(geometry, material)
    mesh.position.z = camera.position.z - 4
    scene.add(mesh)

    const ambientLight = new THREE.AmbientLight(0xffffff, 1)
    scene.add(ambientLight)

    const pointLight = new THREE.PointLight(0xffffff, 50)
    pointLight.position.set(camera.position.x - 1, camera.position.y - 2, camera.position.z - 3)
    scene.add(pointLight)

    // animation
    renderer.setAnimationLoop(time => {
      // mesh.rotation.y = time / 2000
      renderer.render(scene, camera)
    })

    // debug
    // gui.add(mesh.position, 'x').min(-3).max(3).step(0.01)
    // gui.add(camera.position, 'y').min(-10).max(10).step(0.01)

    this.onwheel = () => {
      gsap.to(mesh.rotation, {
        ease: 'linear',
        duration: 1,
        y: scrollEvent.progress * Math.PI * 2 || mesh.rotation.y,
      })
    }

    this.onclick = () => {
      const { r, g, b } = new THREE.Color('#eeff00');
      gsap.to(mesh.material.color, {
        ease: 'linear',
        duration: 2,
        r, g, b,
        onUpdate: () => mesh.material.color.copy(mesh.material.color)
      })
    }

    window.onload = () => resize(webgl)
    window.onresize = () => resize(webgl)
  }
})
</script>

<MainLayout>
  <exp-20>
    <section class="webgl"></section>
  </exp-20>
</MainLayout>

<style>
  exp-20 {
    width: 100%;
    height: 300vh;
    display: grid;
    .webgl {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
      z-index: -1;
    }
  }
</style>