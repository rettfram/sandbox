---
import MainLayout from '../layouts/MainLayout.astro'
---

<script>
customElements.define('exp-26', class extends HTMLElement {
  constructor() { super() }

  connectedCallback() {
    const section = this.querySelector('section') as HTMLElement
    const divArr = [...this.querySelectorAll('div')] as HTMLElement[]

    let endX, endY, startX, startY
    let ease = 0.1
    const lerp = (start, end, easing) => start * (1 - easing) + end * easing

    section.onmousemove = event => {
      divArr.forEach(div => {
        startX = parseFloat(div.style.getPropertyValue('--mouse-x')) || 0
        startY = parseFloat(div.style.getPropertyValue('--mouse-y')) || 0
        
        endX = event.clientX - div.getBoundingClientRect().left
        endY = event.clientY - div.getBoundingClientRect().top

        div.style.setProperty('--mouse-x', `${lerp(startX, endX, ease)}px`)
        div.style.setProperty('--mouse-y', `${lerp(startY, endY, ease)}px`)
      })
    }
  }
})
</script>

<MainLayout>
  <exp-26>
    <section>
      <div class="card">
        <div class="content">afli</div>
      </div>
      <div class="card">
        <div class="content">vindr</div>
      </div>
      <div class="card">
        <div class="content">ǫlðr</div>
      </div>
      <div class="card">
        <div class="content">vikr</div>
      </div>
      <div class="card">
        <div class="content">allr</div>
      </div>
      <div class="card">
        <div class="content">hylli</div>
      </div>
    </section>
  </exp-26>
</MainLayout>

<style>
  exp-26 {
    width: 100%;
    min-height: 100vh;
    display: grid;
    padding: calc(var(--space-scaled) * 3);
    section {
      &:hover .card::after {
        opacity: 1;
      }
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: var(--font-size-1);
      .card {
        position: relative;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 1rem;
        &:hover::before,
        &:hover::after {
          opacity: 1;
        }
        &::before,
        &::after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          border-radius: inherit;
          opacity: 0;
          transition: opacity 0.5s;
        }
        &::before {
          background: radial-gradient(800px circle at var(--mouse-x) var(--mouse-y), rgba(255,255,255,0.05) 0%, transparent 50%);
          z-index: 3;
        }
        &::after {
          background: radial-gradient(800px circle at var(--mouse-x) var(--mouse-y), rgba(255,255,255,0.5) 0%, transparent 50%);
          z-index: 1;
        }
        .content {
          position: relative;
          display: grid;
          place-content: center;
          border-radius: inherit;
          margin: 1px;
          width: calc(100% - 2px);
          height: calc(100% - 2px);
          background: var(--color-background);
          z-index: 2;
        }
      }
    }
  }
</style>