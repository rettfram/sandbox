---
import MainLayout from '../layouts/MainLayout.astro'
---

<script>
import gsap from 'gsap'

customElements.define('exp-04', class extends HTMLElement {
  constructor() { super() }

  connectedCallback() {
    const loader = this.querySelector('.loader') as HTMLElement
    const circle = this.querySelector('.circle') as HTMLElement
    const h1 = this.querySelector('h1') as HTMLElement
    
    gsap.set(loader, { 
      scaleX: 0
    })
    gsap.set(circle, { 
      yPercent: -500, 
      rotationZ: -300
    })
    gsap.set(h1, {
      yPercent: -500
    })

    gsap.to(loader, {
      delay: 2,
      scaleX: '100%'
    })
    gsap.to(circle, {
      ease: 'bounce.out',
      duration: 2,
      yPercent: -50,
      rotation: 0,
    })
    gsap.to(h1, {
      delay: 1.5,
      yPercent: 0,
    })
  }
})
</script>

<MainLayout>
  <exp-04>
    <div class="loader"></div>
    <div class="circle"></div>
    <div class="mask">
      <h1>v√≠gr</h1>
    </div>
  </exp-04>
</MainLayout>

<style>
  exp-04 {
    width: 100%;
    height: 100vh;
    display: grid;
    place-content: center;
    .loader, .circle, .mask {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    .loader {
      width: 100%;
      height: 1px;
      background: var(--color-dimmed);
    }
    .circle {
      width: calc(var(--font-size-1) * 10);
      height: calc(var(--font-size-1) * 10);
      border-radius: calc(var(--font-size-1) * 10);
      border: 10px solid var(--color-dimmed);
      background: var(--color-background);
    }
    .mask {
      overflow: hidden;
      h1 {
        padding: var(--space-scaled);
      }
    }
  }
</style>