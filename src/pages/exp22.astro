---
import MainLayout from '../layouts/MainLayout.astro'
---

<script>
import { loadFiles } from '../scripts/load-files'
import { gsap } from '../scripts/gsap'
import * as THREE from 'three'
import { initThree } from '../scripts/init-three'

customElements.define('exp-22', class extends HTMLElement {
  constructor() { super() }

  async connectedCallback() {
    const loaded = await loadFiles(['/models/default-cube.glb'])
    if (loaded) this.querySelector('.loader-screen')!.classList.add('loader-hide')

    const webgl = this.querySelector('.webgl') as HTMLElement
    const loadingScreen = this.querySelector('.loader-screen') as HTMLElement
    const animate = this.querySelector('.animate') as HTMLElement

    const { renderer, scene, camera, raycaster, mouse, gltfloader, resize } = initThree(webgl)

    let model
    gltfloader.load('/models/default-cube.glb', gltf => {
      model = gltf.scene
      model.position.z = camera.position.z - 10
      model.position.y = camera.position.y - 2
      model.rotation.y = Math.PI / 4
      model.rotation.z = Math.PI / 3
      scene.add(gltf.scene)

      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: animate,
          start: '0% 100%',
          end: '100%, 50%',
          scrub: true,
        }
      })

      tl
      .to(model.scale, {
        x: 5,
        y: 5,
        z: 5
      })
      .to(model.rotation, {
        x: Math.PI / 2,
        z: camera.rotation.z
      }, '<')
      .to(model.position, {
        z: camera.position.z - 7
      }, '<')
    })

    const ambientLight = new THREE.AmbientLight(0xffffff, 1)
    scene.add(ambientLight)

    const pointLight = new THREE.PointLight(0xffffff, 1000)
    pointLight.position.set(camera.position.x, camera.position.y, camera.position.z)
    scene.add(pointLight)

    renderer.setAnimationLoop(time => {
      if (model) model.rotation.y += Math.PI / 600
      renderer.render(scene, camera)
    })

    window.onload = () => resize()
    window.onresize = () => resize()
  }
})
</script>

<MainLayout>
  <exp-22>
    <section>
      <h1>geðjaðr</h1>
    </section>
    <section class="animate"></section>
    <section class="last">
      <h1>ákafamaðr</h1>
    </section>

    <section class="webgl"></section>
    <section class="loader-screen">Loading...</section>
  </exp-22>
</MainLayout>

<style>
  exp-22 {
    width: 100%;
    min-height: 100%;
    display: grid;
    section {
      width: 100%;
      height: 100vh;
      display: grid;
      place-content: center;
      h1 {
        font-size: calc(var(--font-size-3) * 3);
        transform: translateY(-50%);
      }
      &.last {
        color: black
      }
    }

    .webgl {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100vh;
      z-index: -1;
    }

    .loader-screen {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--color-background);
      display: grid;
      place-content: center;
      transition: 1s transform easy-out;
      z-index: 100;
    }
    .loader-hide {
      transform: translateY(-100%);
    }
  }
</style>