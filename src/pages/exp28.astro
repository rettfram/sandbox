---
import MainLayout from '../layouts/MainLayout.astro'
---

<script>
import { loadFiles } from '../scripts/load-files'
import { scrollEvent } from '../scripts/lenis'
import { gsap } from '../scripts/gsap'
import * as THREE from 'three'
import { initThree } from '../scripts/init-three'

import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'
import diffuseFragmentShader from '../shaders/diffuse-fragment.glsl'
import diffuseVertexShader from '../shaders/diffuse-vertex.glsl'
import avalancheFragmentShader from '../shaders/avalanche-fragment.glsl'
import avalancheVertexShader from '../shaders/avalanche-vertex.glsl'

customElements.define('exp-28', class extends HTMLElement {
  constructor() { super() }
  
  async connectedCallback() {
    const loaded = await loadFiles(['/images/img11.webp', '/images/img12.webp', '/images/img13.webp', '/images/img14.webp', '/images/img15.webp', '/images/img16.webp', '/images/img17.webp', '/images/img18.webp', '/images/img19.webp', '/images/img20.webp'])
    if (loaded) this.querySelector('.loader-screen').classList.add('loader-hide')

    const imgArr = [...this.querySelectorAll('img')] as HTMLImageElement[]

    const webgl = this.querySelector('.webgl') as HTMLElement
    const { renderer, scene, camera, raycaster, mouse, effectComposer, resize, scroll, mousemove } = initThree(webgl)

    const createMeshFromImg = img => {
      const { width, height } = img.getBoundingClientRect()
      const hover = new THREE.Vector2(0.5, 0.5)
      const texture = new THREE.TextureLoader().load(img.src, () => texture.needsUpdate = true)
      const shaderMaterial = new THREE.ShaderMaterial({
        fragmentShader: avalancheFragmentShader, 
        vertexShader: avalancheVertexShader,
        uniforms: {
          uTexture: { value: texture },
          uTime: { value: 0 },
          uHoverState: { value: 0 },
          uHover: { value: hover }
        },
        side: THREE.DoubleSide,
        // wireframe: true
      }) 
      const geometry = new THREE.PlaneGeometry(width, height, 10, 10)
      const material = shaderMaterial.clone()
      const mesh = new THREE.Mesh(geometry, material)
      mesh.userData.html = img
      return mesh
    }

    if (imgArr.length) imgArr.map(img => {
      const mesh = createMeshFromImg(img)
      scene.add(mesh)

      img.onmouseenter = event => {
        gsap.to(mesh.material.uniforms.uHoverState, {
          duration: 1,
          value: 1
        })
      }
      img.onmouseout = event => {
        gsap.to(mesh.material.uniforms.uHoverState, {
          duration: 1,
          value: 0
        })
      }
    })

    const shaderPass = new ShaderPass({
      vertexShader: diffuseVertexShader,
      fragmentShader: diffuseFragmentShader,
      uniforms: {
        tDiffuse: { value: null },
        uScrollSpeed: { value: 0 }
      }
    })
    effectComposer.addPass(shaderPass)

    renderer.setAnimationLoop(time => {
      raycaster.setFromCamera(mouse, camera)
      const intersects = raycaster.intersectObjects(scene.children)

      if (intersects.length) intersects[0].object.material.uniforms.uHover.value = intersects[0].uv

      if (scene.children) scene.children.forEach(object => {
        if (object.material) object.material.uniforms.uTime.value = time*0.001
      })

      shaderPass.uniforms.uScrollSpeed.value = Math.abs(scrollEvent.velocity*0.001) || 0
      // renderer.render(scene, camera)
      effectComposer.render()
    })
    
    window.onmousemove = event => mousemove(event)
    window.onscroll = event => scroll(scrollEvent)
    window.onresize = event => resize()
    window.onload = event => resize()
  }
})
</script>

<MainLayout>
  <exp-28>
    <div class="content">
      <div>
        <img src="/images/img11.webp" alt="Abstract image">
        <h6>stjórnsamr</h6>
      </div>
      <div>
        <img src="/images/img12.webp" alt="Abstract image">
        <h6>metnaðar</h6>
      </div>
      <div>
        <img src="/images/img13.webp" alt="Abstract image">
        <h6>skemtiligr</h6>
      </div>
      <div>
        <img src="/images/img14.webp" alt="Abstract image">
        <h6>langfeðgar</h6>
      </div>
      <div>
        <img src="/images/img15.webp" alt="Abstract image">
        <h6>akkeri</h6>
      </div>
      <div>
        <img src="/images/img16.webp" alt="Abstract image">
        <h6>reiði</h6>
      </div>
      <div>
        <img src="/images/img17.webp" alt="Abstract image">
        <h6>annarr</h6>
      </div>
      <div>
        <img src="/images/img18.webp" alt="Abstract image">
        <h6>vreiðr</h6>
      </div>
      <div>
        <img src="/images/img19.webp" alt="Abstract image">
        <h6>gripr</h6>
      </div>
      <div>
        <img src="/images/img20.webp" alt="Abstract image">
        <h6>mótgørð</h6>
      </div>
    </div>

    <section class="webgl"></section>
    <section class="loader-screen">Loading...</section>
  </exp-28>
</MainLayout>

<style>
  exp-28 {
    width: 100%;
    height: 100vh;
    display: grid;
    .content {
      display: grid;
      grid-template-columns: 1fr;
      @media (min-width: 960px) {
        grid-template-columns: 1fr 1fr; 
      }
      padding: calc(var(--space-scaled) * 3);
      gap: calc(var(--font-size-3) * 3) 0;
      div {
        &:nth-child(4n - 3) {
          padding-right: calc(var(--font-size-3) * 3);
        }
        &:nth-child(4n) {
          padding-left: calc(var(--font-size-3) * 3);
        }
        img {
          width: 100%;
          opacity: 0;
        }
      }
    }
    .webgl {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
    }
    
    .loader-screen {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--color-background);
      display: grid;
      place-content: center;
      transition: 1s transform easy-out;
      z-index: 100;
    }
    .loader-hide {
      transform: translateY(-100%);
    }
  }
</style>