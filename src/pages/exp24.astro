---
import MainLayout from '../layouts/MainLayout.astro'
---

<script>
customElements.define('exp-24', class extends HTMLElement {
  constructor() { super() }

  connectedCallback() {
    const cursorOuter = this.querySelector('.cursor.outer') as HTMLElement
    const cursorInner = this.querySelector('.cursor.inner') as HTMLElement
    const linkArr = [...this.querySelectorAll('a')] as HTMLElement[]
    
    let event
    let endX, endY, startX, startY
    let ease = 0.1
    const lerp = (start, end, easing) => start * (1 - easing) + end * easing

    document.onmousemove = e => {
      event = e
      cursorOuter.style.opacity = `1`
      cursorInner.style.opacity = `1`
    }
    
    const updateCursorInner = () => {
      startX = parseFloat(cursorOuter.style.left) || endX
      endX = event?.clientX || parseFloat(cursorInner.style.left)
      endY = event?.clientY || parseFloat(cursorInner.style.top)
      cursorInner.style.left = `${endX}px`
      cursorInner.style.top = `${endY}px`
      requestAnimationFrame(updateCursorInner)
    }
    updateCursorInner()

    const updateCursorOuter = () => {
      startX = parseFloat(cursorOuter.style.left) || endX
      startY = parseFloat(cursorOuter.style.top) || endY
      cursorOuter.style.left = `${lerp(startX, endX, ease)}px`
      cursorOuter.style.top = `${lerp(startY, endY, ease)}px`
      requestAnimationFrame(updateCursorOuter)
    }
    updateCursorOuter()

    linkArr.forEach(link => {
      link.onmouseover = () => cursorInner.classList.add('grow')
      link.onmouseleave = () => cursorInner.classList.remove('grow')
    })
  }
})
</script>

<MainLayout>
  <exp-24>
    <nav>
      <ul>
        <li>
          <a href="#"><h2>ávalt</h2></a>
        </li>
        <li>
          <a href="#"><h2>áðr</h2></a>
        </li>
        <li>
          <a href="#"><h2>atlaga</h2></a>
        </li>
      </ul>
    </nav>

    <div class="cursor outer"></div>
    <div class="cursor inner"></div>
  </exp-24>
</MainLayout>

<style>
  * {
    cursor: none;
  }
  exp-24 {
    width: 100%;
    height: 100vh;
    display: grid;
    place-content: center;
    ul {
      display: flex;
      gap: var(--space-scaled);
      a {
        color: var(--color-text);
      }
    }

    .cursor {
      position: fixed;
      display: flex;
      align-items: center;
      justify-content: center;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      mix-blend-mode: difference;
      pointer-events: none;
      will-change: transform;
      opacity: 0;
      transition: 1s opacity easeOutExpo;
      &.outer {
        width: var(--font-size-3);
        height: var(--font-size-3);
        border-radius: var(--font-size-3);
        border: 1px solid var(--color-text);
      }
      &.inner {
        width: 1rem;
        height: 1rem;
        border-radius: calc(var(--font-size-3));
        background: var(--color-text);
        transition: 1s width easeOutExpo, 1s height easeOutExpo;
        &.grow {
          width: var(--font-size-3);
          height: var(--font-size-3);
        }
      }
    }
  }
</style>